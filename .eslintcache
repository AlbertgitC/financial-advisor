[{"/Users/albertcheng/workstuff/financial-advisor/src/index.js":"1","/Users/albertcheng/workstuff/financial-advisor/src/reportWebVitals.js":"2","/Users/albertcheng/workstuff/financial-advisor/src/App.js":"3","/Users/albertcheng/workstuff/financial-advisor/src/components/util/reducer.js":"4","/Users/albertcheng/workstuff/financial-advisor/src/components/util/actions.js":"5","/Users/albertcheng/workstuff/financial-advisor/src/components/donutGraph.js":"6","/Users/albertcheng/workstuff/financial-advisor/src/components/calInvest.js":"7","/Users/albertcheng/workstuff/financial-advisor/src/components/riskForm.js":"8"},{"size":717,"mtime":1611144136545,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1611104805426,"results":"11","hashOfConfig":"10"},{"size":742,"mtime":1611152130944,"results":"12","hashOfConfig":"10"},{"size":1454,"mtime":1611232833233,"results":"13","hashOfConfig":"10"},{"size":172,"mtime":1611232833232,"results":"14","hashOfConfig":"10"},{"size":4572,"mtime":1611232833232,"results":"15","hashOfConfig":"10"},{"size":8584,"mtime":1611232833231,"results":"16","hashOfConfig":"10"},{"size":2378,"mtime":1611232833232,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"tosnou",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/albertcheng/workstuff/financial-advisor/src/index.js",[],["38","39"],"/Users/albertcheng/workstuff/financial-advisor/src/reportWebVitals.js",[],"/Users/albertcheng/workstuff/financial-advisor/src/App.js",["40","41","42"],"import './App.css';\nimport { useState, useEffect } from 'react';\nimport * as Actions from './components/util/actions';\nimport { useSelector, useDispatch } from 'react-redux';\nimport DonutGraph from './components/donutGraph';\n\nfunction App() {\n  const [mainComponent, setComponent] = useState({ component: <DonutGraph /> });\n  const state = useSelector(state => state);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setComponent({ component: <DonutGraph setComponent={setComponent}/> });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"header\">\n        <h1>Financial Advisor</h1>\n      </div>\n      <div className=\"main\">\n        {mainComponent.component}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/albertcheng/workstuff/financial-advisor/src/components/util/reducer.js",["43","44"],"/Users/albertcheng/workstuff/financial-advisor/src/components/util/actions.js",[],"/Users/albertcheng/workstuff/financial-advisor/src/components/donutGraph.js",["45","46","47"],"import './donutGraph.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useState, useEffect } from 'react';\nimport Chart from 'chart.js';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport * as Actions from './util/actions';\nimport CalInvest from './calInvest';\n\nfunction DonutGraph(props) {\n    const globalState = useSelector(state => state);\n    const defaultRisk = {\n        risk: 1,\n        distribution: Object.values(globalState.riskChart[1])\n    };\n    const dispatch = useDispatch();\n    const [riskState, setRisk] = useState(defaultRisk)\n\n    useEffect(() => {\n        let risk1 = document.getElementsByClassName(\"level\")[0];\n        selectLevel(risk1);\n        // renderChart(riskState.distribution);\n    }, [])\n\n    function renderChart(data) {\n        const ctx = document.getElementById(\"donut-chart\").getContext(\"2d\");\n        const configChart = {\n            type: \"doughnut\",\n            data: {\n                labels: [\"Bonds\", \"Large Cap\", \"Mid Cap\", \"Foreign\", \"Small Cap\"],\n                datasets: [{\n                    data: data,\n                    backgroundColor: [\n                        \"#EF4F4F\",\n                        \"#EE9595\",\n                        \"#F58634\",\n                        \"#007965\",\n                        \"#00587A\"\n                    ],\n                    borderColor: \"#000000\"\n                }]\n            },\n            options: {\n                hover: false,\n                tooltips: false,\n                legend: {\n                    labels: {\n                        fontColor: \"#FFFFFF\",\n                        fontSize: 15\n                    }\n                },\n                animation: {\n                    duration: 1300\n                },\n                plugins: {\n                    datalabels: {\n                        display: function (context) {\n                            let index = context.dataIndex;\n                            let value = context.dataset.data[index];\n                            if (value) return true;\n                            return false;\n                        },\n                        formatter: function (value, context) {\n                            if (value) {\n                                return (\n                                    context.chart.data.labels[context.dataIndex] + \"\\n\" + (value * 100) + \"%\"\n                                );\n                            };\n                        },\n                        color: \"#ffffff\",\n                        font: {\n                            size: \"22\",\n                            weight: \"600\"\n                        }\n                    }\n                }\n            }\n        };\n        const donutChart = new Chart(ctx, configChart);\n    };\n\n    function selectLevel(target) {\n        let clicked = document.getElementsByClassName(\"clicked\")[0];\n        if (clicked) clicked.classList.remove(\"clicked\");\n        target.classList.add(\"clicked\");\n        dispatch(Actions.changeRisk(target.innerHTML));\n        setRisk({\n            ...riskState,\n            risk: target.innerHTML,\n            distribution: Object.values(globalState.riskChart[target.innerHTML])\n        });\n        renderChart(Object.values(globalState.riskChart[target.innerHTML]));\n    };\n\n    function handleClick(e) {\n        selectLevel(e.target);\n    };\n\n    function buttonClick() {\n        props.setComponent({ component: <CalInvest /> });\n    };\n\n    return (\n        <div className=\"donut-container\">\n            <p>Please Select A Risk Level For Your Investment Portfolio</p>\n            <div className=\"risk-indicator\">\n                <p>Low</p>\n                <p>High</p>\n            </div>\n            <div className=\"risk-levels\">\n                <div className=\"level\" onClick={handleClick}>1</div>\n                <div className=\"level\" onClick={handleClick}>2</div>\n                <div className=\"level\" onClick={handleClick}>3</div>\n                <div className=\"level\" onClick={handleClick}>4</div>\n                <div className=\"level\" onClick={handleClick}>5</div>\n                <div className=\"level\" onClick={handleClick}>6</div>\n                <div className=\"level\" onClick={handleClick}>7</div>\n                <div className=\"level\" onClick={handleClick}>8</div>\n                <div className=\"level\" onClick={handleClick}>9</div>\n                <div className=\"level\" onClick={handleClick}>10</div>\n            </div>\n            <canvas id=\"donut-chart\"></canvas>\n            <div className=\"inv-portfolio\">\n                <div>INVESTMENT</div>\n                <div>PORTFOLIO</div>\n            </div>\n            <div>\n                <button onClick={buttonClick}>Calculate Your Investment</button>\n            </div>\n        </div>\n    );\n}\n\nexport default DonutGraph;","/Users/albertcheng/workstuff/financial-advisor/src/components/calInvest.js",["48"],"function CalInvest() {\n    return (\n        <div>\n            calculation here\n        </div>\n    );\n};\n\nexport default CalInvest;","/Users/albertcheng/workstuff/financial-advisor/src/components/riskForm.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":3,"column":13,"nodeType":"55","messageId":"56","endLine":3,"endColumn":20},{"ruleId":"53","severity":1,"message":"57","line":9,"column":9,"nodeType":"55","messageId":"56","endLine":9,"endColumn":14},{"ruleId":"53","severity":1,"message":"58","line":10,"column":9,"nodeType":"55","messageId":"56","endLine":10,"endColumn":17},{"ruleId":"53","severity":1,"message":"59","line":24,"column":17,"nodeType":"55","messageId":"56","endLine":24,"endColumn":21},{"ruleId":"53","severity":1,"message":"60","line":25,"column":17,"nodeType":"55","messageId":"56","endLine":25,"endColumn":23},{"ruleId":"53","severity":1,"message":"61","line":5,"column":8,"nodeType":"55","messageId":"56","endLine":5,"endColumn":23},{"ruleId":"62","severity":1,"message":"63","line":16,"column":8,"nodeType":"64","endLine":16,"endColumn":10,"suggestions":"65"},{"ruleId":"53","severity":1,"message":"66","line":72,"column":15,"nodeType":"55","messageId":"56","endLine":72,"endColumn":25},{"ruleId":"62","severity":1,"message":"67","line":24,"column":8,"nodeType":"64","endLine":24,"endColumn":10,"suggestions":"68"},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'Actions' is defined but never used.","Identifier","unusedVar","'state' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'type' is assigned a value but never used.","'amount' is assigned a value but never used.","'ChartDataLabels' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'globalState.risk' and 'selectLevel'. Either include them or remove the dependency array.","ArrayExpression",["71"],"'donutChart' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'globalState.investment'. Either include it or remove the dependency array.",["72"],"no-global-assign","no-unsafe-negation",{"desc":"73","fix":"74"},{"desc":"75","fix":"76"},"Update the dependencies array to be: [globalState.risk, selectLevel]",{"range":"77","text":"78"},"Update the dependencies array to be: [globalState.investment]",{"range":"79","text":"80"},[525,527],"[globalState.risk, selectLevel]",[783,785],"[globalState.investment]"]